// Code generated by MockGen. DO NOT EDIT.
// Source: internal/infrastructure/hedera/client.go

package mocks

import (
	"reflect"

	"github.com/ethereum/go-ethereum/common"
	"github.com/golang/mock/gomock"
	"github.com/LimeChain/Hederium/internal/infrastructure/hedera"
)

// MockHederaNodeClient is a mock of HederaNodeClient interface.
type MockHederaNodeClient struct {
	ctrl     *gomock.Controller
	recorder *MockHederaNodeClientMockRecorder
}

// MockHederaNodeClientMockRecorder is the mock recorder for MockHederaNodeClient.
type MockHederaNodeClientMockRecorder struct {
	mock *MockHederaNodeClient
}

// NewMockHederaNodeClient creates a new mock instance.
func NewMockHederaNodeClient(ctrl *gomock.Controller) *MockHederaNodeClient {
	mock := &MockHederaNodeClient{ctrl: ctrl}
	mock.recorder = &MockHederaNodeClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHederaNodeClient) EXPECT() *MockHederaNodeClientMockRecorder {
	return m.recorder
}

// GetNetworkFees mocks base method.
func (m *MockHederaNodeClient) GetNetworkFees() (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetworkFees")
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNetworkFees indicates an expected call of GetNetworkFees.
func (mr *MockHederaNodeClientMockRecorder) GetNetworkFees() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkFees", reflect.TypeOf((*MockHederaNodeClient)(nil).GetNetworkFees))
}

// SendRawTransaction mocks base method.
func (m *MockHederaNodeClient) SendRawTransaction(transactionData []byte, networkGasPriceInWeiBars int64, callerId *common.Address) (*hedera.TransactionResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendRawTransaction", transactionData, networkGasPriceInWeiBars, callerId)
	ret0, _ := ret[0].(*hedera.TransactionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SendRawTransaction indicates an expected call of SendRawTransaction.
func (mr *MockHederaNodeClientMockRecorder) SendRawTransaction(transactionData, networkGasPriceInWeiBars, callerId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendRawTransaction", reflect.TypeOf((*MockHederaNodeClient)(nil).SendRawTransaction), transactionData, networkGasPriceInWeiBars, callerId)
}

// GetContractByteCode mocks base method.
func (m *MockHederaNodeClient) GetContractByteCode(shard, realm int64, address string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContractByteCode", shard, realm, address)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContractByteCode indicates an expected call of GetContractByteCode.
func (mr *MockHederaNodeClientMockRecorder) GetContractByteCode(shard, realm, address interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContractByteCode", reflect.TypeOf((*MockHederaNodeClient)(nil).GetContractByteCode), shard, realm, address)
}

func (m *MockHederaNodeClient) GetOperatorPublicKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOperatorPublicKey")
	return ret[0].(string)
}

func (mr *MockHederaNodeClientMockRecorder) GetOperatorPublicKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOperatorPublicKey", reflect.TypeOf((*MockHederaNodeClient)(nil).GetOperatorPublicKey))
}
