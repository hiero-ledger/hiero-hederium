name: Deploy Release with Helm

on:
  workflow_run:
    workflows: ["Build and Push Release Image"]
    types: 
      - completed

permissions:
  contents: read

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        
      - name: Set up Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
        with:
          version: 'latest'

      - name: Extract release version
        id: version
        run: |
          RELEASE_TAG=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)
          echo "VERSION=${RELEASE_TAG#v}" >> $GITHUB_OUTPUT

      # - name: Authenticate to Google Cloud
      #   uses: google-github-actions/auth@ba79af03959ebeac9769e648f473a284504d9193 # v2.1.10
      #   with:
      #     credentials_json: ${{ secrets.GCP_SA_KEY_JSON }}
      #     project_id: ${{ secrets.GCP_PROJECT_ID }}
      #     export_environment_variables: true

      # - name: Set up Google Cloud SDK
      #   uses: google-github-actions/setup-gcloud@77e7a554d41e2ee56fc945c52dfd3f33d12def9a # v2.1.4
      #   with:
      #     project_id: ${{ secrets.GCP_PROJECT_ID }}

      # - name: Get GKE credentials
      #   uses: google-github-actions/get-gke-credentials@d0cee45012069b163a631894b98904a9e6723729 # v2.3.3
      #   with:
      #     cluster_name: unknown-for-now
      #     location: unknown-for-now

      - name: Update Helm Charts
        run: |
          sed -i "s/^appVersion:.*/appVersion: \"${{ steps.version.outputs.VERSION }}\"/" charts/Chart.yaml

      # TODO: Uncomment this when we have a production cluster
      # - name: Deploy to GKE
      #   run: |
      #     helm upgrade --install hederium ./charts \
      #     -f charts/production-values.yaml \
      #     --set image.tag=v${{ steps.version.outputs.VERSION}}